/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        ctrl_up: ctrl_up {
            label = "CTRL_UP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_tap &kp UP>, <&macro_release &kp LCTRL>;
        };

        ctrl_left: ctrl_left {
            label = "CTRL_LEFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_tap &kp LEFT>, <&macro_release &kp LCTRL>;
        };

        ctrl_right: ctrl_right {
            label = "CTRL_RIGHT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_tap &kp RIGHT>, <&macro_release &kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |  4  |  5  | [ |                   ---                | ] |  6    |  7    |  8    |  9   | 0  |    -     |
// | TAB   |  Q  |  W  |   E   |  R  |  T  | ` |           ---                | = |  Y    |  U    |  I    |  O   | P  |     \     |
// | ESC   |  A  |  S  |   D   |  F  |  G  |C_L|           ---                | ' |  H    |  J    |  K    |  L   | ;  |     PGDN  |
// | SHIFT |  Z  |  X  |   C   |  V  |  B  |C_R| C_U | --- | LEFT | DOWN | UP | RIGHT |  N    |  M    |  ,    |  .   | /  | PGUP |
// | MO(1) |C_U|LCTRL|LALT |    LGUI    |SPACE|BSPC| --- | RGUI | SPACE |    ENTER     | LEFT  | DOWN | UP |   RIGHT   |
            bindings = <
&kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5    &kp LBKT                             &kp RBKT   &kp N6    &kp N7   &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp Q    &kp W    &kp E     &kp R     &kp T     &kp GRAVE                            &kp EQUAL  &kp Y     &kp U    &kp I      &kp O     &kp P     &kp BSLH
&kp ESC   &kp A    &kp S    &kp D     &kp F     &kp G     &ctrl_left                           &kp SQT    &kp H     &kp J    &kp K      &kp L     &kp SEMI  &kp PG_DN
&kp LSHFT &kp Z    &kp X    &kp C     &kp V     &kp B     &ctrl_right &ctrl_up  &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp N     &kp M    &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&mo 1     &ctrl_up &kp LCTRL &kp LALT      &kp LGUI       &kp SPACE   &kp BSPC  &kp RGUI &kp SPACE        &kp RET        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT
            >;
        };

        lower_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// | TRANS   |  F1   |  F2   |   F3   |  F4  |  F5  | TRANS |                   ---                | TRANS |  F6   |  F7   |  F8   |  F9  | F10 | TRANS   |
// | TRANS   |S(N1)  |S(N2)  |S(LBKT) |S(RBKT)|S(BSLH)|TRANS |           ---                | TRANS | PMNS  |  P9   |  P8   |  P7  | PSLS | TRANS  |
// | TRANS   |S(N3)  |S(N4)  | LBKT   | RBKT  | GRV   | VOLD |           ---                | TRANS | PPLS  |  P6   |  P5   |  P4  | PAST | TRANS  |
// | TRANS   |S(N5)  |S(N6)  | S(N9)  | S(N0) |S(GRV) | VOLU | TRANS | --- | TRANS |TRANS|TRANS|TRANS| PENT  |  P3   |  P2   |  P1  | TRANS| TRANS |
// | TRANS   | TRANS | TRANS | TRANS  |    MUTE       | TRANS | TRANS | --- | TRANS |TRANS|     PENT     | PDOT  |  P0   |TRANS | TRANS |
            bindings = <
&trans    &kp F1     &kp F2     &kp F3        &kp F4        &kp F5        &trans                                &trans     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &trans
&trans    &kp LS(N1) &kp LS(N2) &kp LS(LBKT)  &kp LS(RBKT)  &kp LS(BSLH)  &trans                               &trans     &kp KP_MINUS &kp KP_N9 &kp KP_N8  &kp KP_N7  &kp KP_SLASH &trans
&trans    &kp LS(N3) &kp LS(N4) &kp LBKT      &kp RBKT      &kp GRAVE     &kp C_VOL_DN                         &trans     &kp KP_PLUS  &kp KP_N6 &kp KP_N5  &kp KP_N4  &kp KP_MULTIPLY &trans
&trans    &kp LS(N5) &kp LS(N6) &kp LS(N9)    &kp LS(N0)    &kp LS(GRAVE) &kp C_VOL_UP &trans &trans &trans &trans &trans &kp KP_ENTER &kp KP_N3 &kp KP_N2 &kp KP_N1 &trans &trans
&trans    &trans     &trans     &trans              &kp K_MUTE            &trans       &trans &trans &trans        &kp KP_ENTER         &kp KP_DOT  &kp KP_N0  &trans     &trans
            >;
        };
    };
};
